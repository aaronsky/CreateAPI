// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.Pet.WithPetID {
    public var uploadImage: UploadImage {
        UploadImage(path: path + "/uploadImage")
    }

    public struct UploadImage {
        /// Path: `/pet/{petId}/uploadImage`
        public let path: String

        /// Uploads an image
        public func post(_ body: PostRequest? = nil) -> Request<edgecases_multipart_formdata.APIResponse> {
            Request(path: path, method: "POST", body: body, id: "uploadFile")
        }

        public struct PostRequest: Encodable {
            /// Additional data to pass to server
            public var additionalMetadata: String?
            /// File to upload
            public var file: Data?

            public init(additionalMetadata: String? = nil, file: Data? = nil) {
                self.additionalMetadata = additionalMetadata
                self.file = file
            }

            public func encode(to encoder: any Encoder) throws {
                var values = encoder.container(keyedBy: StringCodingKey.self)
                try values.encodeIfPresent(additionalMetadata, forKey: "additionalMetadata")
                try values.encodeIfPresent(file, forKey: "file")
            }
        }
    }
}
